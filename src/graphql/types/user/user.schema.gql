"""
An user
"""
type User {
  """
  The identifier
  """
  id: ID!
  """
  The first name. Eg. John
  """
  firstName: String!
  """
  The last name. Eg. Doe
  """
  lastName: String!
  """
  The full name. Eg. John Doe
  """
  fullName: String!
  """
  The gender. Eg. Male
  """
  gender: String!
  """
  The username. Eg. JohnDoe
  """
  username: String!
  """
  The email adress. Eg. johndoe@email.com
  """
  email: String!
  """
  The biography or presentation. Eg. I am a developer
  """
  bio: String
  """
  The date it was created in ISO8601 format
  """
  createdAt: Date!
  """
  The date it was last updated in ISO8601 format
  """
  updatedAt: Date!
  """
  The products or services that belong to the user
  """
  products: [Product!]
  """
  The organizations to which the user belongs
  """
  organizations: [Organization!]
  """
  The issues initialized by the user
  """
  issues: [Issue!]
  """
  The comments written by the user
  """
  comments: [Comment!]
}

type Query {
  """
  Fetch a user by his id
  """
  user(id: ID!): User

  """
  Fetch a list of users
  """
  users(
    page: Int = 1
    limit: Int = 10
    orderBy: String = "id"
    direction: ORDER = ASC
  ): [User!]
}

type Mutation {
  """
  Create a new user
  """
  createUser(user: CreateUserInput!): CreateUserPayload

  """
  Update an existing user
  """
  updateUser(id: ID!, user: UpdateUserInput!): UpdateUserPayload

  """
  Delete an existing user
  """
  deleteUser(id: ID!): DeleteUserPayload
}

"""
The possible validation errors returned when creating a user
"""
type CreateUserValidation {
  """
  The validation error of the first name
  """
  firstName: String
  """
  The validation error of the last name
  """
  lastName: String
  """
  The validation error of the gender
  """
  gender: String
  """
  The validation error of the username
  """
  username: String
  """
  The validation error of the password
  """
  password: String
  """
  The validation error of the password confirmation
  """
  passwordConfirmation: String
  """
  The validation error of the email
  """
  email: String
  """
  The validation error of the biography
  """
  bio: String
}

"""
The payload returned when a new user is created
"""
type CreateUserPayload {
  """
  The status of the operation
  """
  operation: Operation!
  """
  The created user
  """
  user: User
  """
  The validation errors
  """
  errors: CreateUserValidation
}

"""
The possible validation errors returned when updating a user
"""
type UpdateUserValidation {
  """
  The validation error of the first name
  """
  firstName: String
  """
  The validation error of the last name
  """
  lastName: String
  """
  The validation error of the gender
  """
  gender: String
  """
  The validation error of the username
  """
  username: String
  """
  The validation error of the email
  """
  email: String
  """
  The validation error of the biography
  """
  bio: String
}

"""
The payload returned when a user is updated
"""
type UpdateUserPayload {
  """
  The status of the operation
  """
  operation: Operation!
  """
  The updated user
  """
  user: User
  """
  The validation errors
  """
  errors: UpdateUserValidation
}

"""
The payload returned when a user is deleted
"""
type DeleteUserPayload {
  """
  The status of the operation
  """
  operation: Operation!
  """
  The deleted user
  """
  user: User
}

"""
The properties needed to create a new user
"""
input CreateUserInput {
  """
  The first name
  """
  firstName: String!
  """
  The last name
  """
  lastName: String!
  """
  The gender
  """
  gender: String!
  """
  The username
  """
  username: String!
  """
  The password
  """
  password: String!
  """
  The password confirmation
  """
  passwordConfirmation: String!
  """
  The email address
  """
  email: String!
  """
  The biography
  """
  bio: String
}

"""
The properties used to update an existing user
"""
input UpdateUserInput {
  """
  The first name
  """
  firstName: String
  """
  The last name
  """
  lastName: String
  """
  The gender
  """
  gender: String
  """
  The username
  """
  username: String
  """
  The email address
  """
  email: String
  """
  The biography
  """
  bio: String
}
